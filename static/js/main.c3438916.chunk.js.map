{"version":3,"sources":["reportWebVitals.js","App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","marked","require","App","props","state","markdown","PLACEHOLDER","this","setState","className","class","Badge","id","style","width","height","marginLeft","marginRight","padding","value","onChange","e","updateMarkdown","target","console","log","backgroundColor","dangerouslySetInnerHTML","__html","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sKAYeA,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,0CCLVQ,EAASC,EAAQ,IAEAC,E,kDAEnB,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,SAAUC,GAHK,E,kDAMjB,SAAeD,GACbE,KAAKC,SAAS,CAAEH,e,oBAGpB,WAAS,IAAD,OAmBN,OACE,qBAAKI,UAAU,MAAf,SACE,sBAAKA,UAAU,YAAf,UACE,qBAAKA,UAAU,WAAf,SACE,qBAAKA,UAAU,kBAAf,SACF,+BACG,IACD,sBAAMC,MAAM,qBAAZ,SACA,cAACC,EAAA,EAAD,CAAOF,UAAU,oBAAjB,uCAMF,sBAAKA,UAAU,WAAf,UAGE,sBAAKA,UAAU,WAAf,UAEE,qBAAKA,UAAU,kBAAf,SACE,6BACE,sBAAMC,MAAM,qBAAZ,SACA,cAACC,EAAA,EAAD,CAAOF,UAAU,oBAAjB,kCAKJ,qBAAKA,UAAU,UACf,0BACAG,GAAG,SACHH,UAAU,QACVI,MAjDO,CACfC,MAAO,QACPC,OAAQ,OACRC,WAAY,OACZC,YAAa,OACbC,QAAS,QA6CDC,MAAOZ,KAAKH,MAAMC,SAClBe,SAAU,SAACC,GACT,EAAKC,eAAeD,EAAEE,OAAOJ,QAN/B,SASCK,QAAQC,IAAIlB,KAAKH,MAAMC,YApB1B,OA0BA,sBAAKI,UAAU,WAAf,UAEE,qBAAKA,UAAU,kBAAf,SACE,6BACE,sBAAMC,MAAM,qBAAZ,SACA,cAACC,EAAA,EAAD,CAAOF,UAAU,oBAAjB,kCAKJ,qBACAG,GAAG,UACHF,MAAM,gBACNG,MAlEQ,CAChBC,MAAO,QACPC,OAAQ,OACRW,gBAAiB,UACjBV,WAAY,OACZC,YAAa,OACbC,QAAS,QA6DDS,wBAAyB,CAAEC,OAAQ5B,EAAOO,KAAKH,MAAMC,4B,GAxFlCwB,IAAMC,WAqGjCxB,EAAW,gpC,MCnGjByB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1B5C,M","file":"static/js/main.c3438916.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport Badge from 'react-bootstrap/Badge';\nlet marked = require(\"marked\");\n\nexport default class App extends React.Component{\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      markdown: PLACEHOLDER,\n    };\n  }\n    updateMarkdown(markdown) {\n      this.setState({ markdown });\n    }\n\n  render(){\n    var inputStyle = {\n      width: \"400px\",\n      height: \"50vh\",\n      marginLeft: \"auto\",\n      marginRight: \"auto\",\n      padding: \"10px\"\n    };\n\n    var outputStyle = {\n      width: \"400px\",\n      height: \"50vh\",\n      backgroundColor: \"#DCDCDC\",\n      marginLeft: \"auto\",\n      marginRight: \"auto\",\n      padding: \"10px\",\n    \n    }\n\n    return (\n      <div className=\"App\">\n        <div className=\"container\">\n          <div className=\"row mt-4\">\n            <div className=\"col text-center\">\n          <h1>\n            {\" \"}\n            <span class=\"badge bg-secondary\">\n            <Badge className=\"text-align-center\">Markdown Preview\n            </Badge></span>\n          </h1>\n          </div>\n          </div>\n\n          <div className=\"row mt-4\">\n\n\n            <div className=\"col-md-6\">\n           \n              <div className=\"col text-center\">\n                <h4>\n                  <span class=\"badge bg-secondary\">\n                  <Badge className=\"text-align-center\">\n                    Markdown Input\n                  </Badge></span>\n                </h4>\n              </div>\n              <div className=\"input\" ></div>\n              <textarea \n              id=\"editor\"\n              className=\"input\" \n              style={inputStyle} \n              value={this.state.markdown}\n              onChange={(e) => {\n                this.updateMarkdown(e.target.value);\n              }}> \n                \n              {console.log(this.state.markdown)}\n              </textarea>;\n            </div>\n            \n\n\n            <div className=\"col-md-6\">\n            \n              <div className=\"col text-center\">\n                <h4>\n                  <span class=\"badge bg-secondary\">\n                  <Badge className=\"text-align-center\">\n                    Preview Output\n                  </Badge></span>\n                </h4>\n              </div>\n              <div \n              id=\"preview\"\n              class=\"overflow-auto\"\n              style={outputStyle}\n              dangerouslySetInnerHTML={{ __html: marked(this.state.markdown) }}\n              >\n      \n              </div>\n            </div>\n          </div>\n        </div>\n\n      </div>\n    );\n  }\n}\n\nconst PLACEHOLDER = `# Welcome to my React Markdown Previewer!\n\n## This is a sub-heading...\n### And here's some other cool stuff:\n\nHeres some code, \\`<div></div>\\`, between 2 backticks.\n\n\\`\\`\\`\n// this is multi-line code:\n\nfunction anotherExample(firstLine, lastLine) {\n  if (firstLine == '\\`\\`\\`' && lastLine == '\\`\\`\\`') {\n    return multiLineCode;\n  }\n}\n\\`\\`\\`\n\nYou can also make text **bold**... whoa!\nOr _italic_.\nOr... wait for it... **_both!_**\nAnd feel free to go crazy ~~crossing stuff out~~.\n\nThere's also [links](https://retisonblu.github.io/), and\n> Block Quotes!\n\nAnd if you want to get really crazy, even tables:\n\nWild Header | Crazy Header | Another Header?\n------------ | ------------- | -------------\nYour content can | be here, and it | can be here....\nAnd here. | Okay. | I think we get it.\n\n- And of course there are lists.\n  - Some are bulleted.\n     - With different indentation levels.\n        - That look like this.\n\n\n1. And there are numbered lists too.\n1. Use just 1s if you want!\n1. And last but not least, let's not forget embedded images:\n\n![React Logo w/ Text](https://cdn.iconscout.com/icon/free/png-256/react-1-282599.png)\n\n`;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\nimport App from './App';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}